@page "/home"
@using Layout_Client.Model.DTO
@using Layout_Client.Service
@inject RestaurantService RestaurantService
@inject ReviewService ReviewService

@inject NavigationManager Navigation
@inject IJSRuntime JS

<div>
    <!-- Hero Banner -->
    <section class="hero-section py-5 text-white text-center"
        style="background: linear-gradient(135deg, #007bff, #0056b3);">
        <div class="container">
            <h1 class="display-4 fw-bold mb-3">Khám Phá Ẩm Thực Tại Nhà</h1>
            <p class="lead mb-4">Đặt đồ ăn từ nhà hàng yêu thích của bạn chỉ với vài cú nhấp chuột</p>
        </div>
    </section>
    <!-- Featured Restaurants -->
    <section class="py-5 bg-light">
            <!-- Top Rated Menu Items - Horizontal Scroll -->
        <section class="py-5 bg-white" style="border-bottom: 1px solid #150e0e;">
            <div class="container position-relative">
                <h1 class="text-left text-success fw-bold mb-4" style="font-size: 23px;">🔥 Món Ăn Được Yêu Thích Nhất</h1>
            <div class="scroll-wrapper">
                <button class="scroll-btn left" @onclick='() => ScrollLeft("menuScroll")'><span class="text-center">‹</span></button>
                <button class="scroll-btn right" @onclick='() => ScrollRight("menuScroll")'><span class="text-center">›</span></button>

                <div id="menuScroll" class="scroll-container">
                    @if (topMenuItems != null)
                    {
                        @foreach (var item in topMenuItems)
                        {
                            <div class="scroll-card">
                                <img src="@item.ImageUrl" class="card-img-top" style="height: 140px; object-fit: cover;" />
                                <div class="p-2">
                                    <h5 class="text-primary">@item.MenuItemName</h5>
                                    <p class="small text-muted mb-2">⭐ @item.AverageRating.ToString("0.0") / 5 (@item.ReviewCount đánh giá)</p>
                                    <p class="small text-secondary mb-2">
                                        🏠 @item.RestaurantName
                                    </p>
                                    <a href="/restaurant/@item.RestaurantID" class="btn btn-outline-primary btn-sm">Xem chi tiết</a>
                                </div>
                            </div>
                        }
                    }
                    else
                    {
                        <p class="text-muted">Không có dữ liệu món ăn nổi bật.</p>
                    }
                </div>
                </div>
            </div>
        </section>

            <!-- Top Rated Restaurants - Horizontal Scroll -->
            <section class="py-5 bg-white" style="border-bottom: 1px solid #150e0e;">
                <div class="container position-relative">
                    <h1 class="text-left text-warning fw-bold mb-4" style="font-size: 23px;">🏆 Nhà Hàng Được Đánh Giá Cao</h1>
                    <div class="scroll-wrapper">
                    <button class="scroll-btn left" @onclick='() => ScrollLeft("restaurantScroll")'>‹</button>
                    <button class="scroll-btn right" @onclick='() => ScrollRight("restaurantScroll")'>›</button>

                    <div id="restaurantScroll" class="scroll-container">
                        @if (topRatedRestaurants != null)
                        {
                            @foreach (var res in topRatedRestaurants)
                            {
                                <div class="scroll-card">
                                    <img src="@res.LogoUrl" class="card-img-top" style="height: 140px; object-fit: cover;" />
                                    <div class="p-2">
                                        <h5 class="text-primary">@res.RestaurantName</h5>
                                        <p class="small text-muted mb-2">⭐ @res.AverageRating.ToString("0.0") / 5 (@res.ReviewCount đánh giá)</p>
                                        <a href="/restaurant/@res.RestaurantID" class="btn btn-outline-warning btn-sm">Xem thực đơn</a>
                                    </div>
                                </div>
                            }
                        }
                        else
                        {
                            <p class="text-muted">Không có dữ liệu nhà hàng nổi bật.</p>
                        }
                    </div>
                    </div>
                </div>
            </section>

     <!-- Restaurants-->
        <div class="container">
            <h4 class="text-left mb-4 text-primary fw-bold" style="font-size: 23px;">
                🍽️ Danh Sách Nhà Hàng
            </h4>
            <!-- Search -->
                <div class="d-flex justify-content-end mb-4">
                    <div style="max-width: 500px;" class="w-100">
                        <div class="input-group input-group-md shadow rounded-pill">
                            <input type="text" class="form-control rounded-pill" placeholder="Tìm nhà hàng..."
                                @bind="searchTerm" />
                            <button class="btn btn-light text-primary fw-bold rounded-pill" @onclick="SearchRestaurants">
                                <i class="fas fa-search"></i>
                            </button>
                        </div>
                    </div>
                </div>

            @if (isLoading)
            {
                <div class="text-center my-5">
                    <div class="spinner-border text-primary" style="width: 3rem; height: 3rem;"></div>
                    <p class="mt-3">Đang tải nhà hàng...</p>
                </div>
            }
            else if (restaurants == null || restaurants.Count == 0)
            {
                <div class="alert alert-warning text-center">Không tìm thấy nhà hàng nào.</div>
            }
            else
            {
                <div class="row g-3">
                    @foreach (var restaurant in restaurants) // Limit to 5 restaurants
                    {
                        <div class="col-12 col-sm-6 col-lg-4 col-xl-3">
                            <div class="card compact-card h-100 border-0 elevated-card">
                                <img src="@restaurant.LogoUrl" class="card-img-top restaurant-image" alt="@restaurant.Name" />
                                <div class="card-body pb-2 pt-3 px-3">
                                    <h5 class="restaurant-title text-primary mb-1">@restaurant.Name</h5>
                                    <p class="restaurant-description text-muted mb-2">@restaurant.Description</p>
                                    <div class="d-flex justify-content-between align-items-center">
                                        @if (restaurant.IsActive == true)
                                        {
                                            <span class="badge bg-light text-success">Đang Mở Cửa </span>
                                        }
                                        else
                                        {
                                            <span class="badge bg-light text-danger">Đóng Cửa</span>
                                        }
                                        <a href="/restaurant/@restaurant.RestaurantID" class="btn btn-sm btn-outline-primary">Thực đơn</a>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                    <nav class="mt-4">
                        <ul class="pagination justify-content-center">
                            <li class="page-item @(currentPage == 1 ? "disabled" : "")">
                                <button class="page-link" @onclick="PreviousPage" disabled="@(currentPage == 1)">← Trước</button>
                            </li>
                            <li class="page-item disabled">
                                <span class="page-link">Trang @currentPage</span>
                            </li>
                            <li class="page-item @(hasNextPage ? "" : "disabled")">
                                <button class="page-link" @onclick="NextPage" disabled="@(!hasNextPage)">Sau →</button>
                            </li>

                        </ul>
                    </nav>
                </div>
            }
        </div>
    </section>
</div>

@code {
    private List<RestaurantResponseDTO>? restaurants;
    private List<MenuItemRatingDTO>? topMenuItems;
    private List<RestaurantRatingDTO>? topRatedRestaurants;
    private bool isLoading = true;
    private string searchTerm = string.Empty;
    private int currentPage = 1;
    private const int PageSize = 4;
    private bool hasNextPage = false;

    protected override async Task OnInitializedAsync()
    {
        await LoadRestaurants();
        await LoadRatings();
        StateHasChanged();
    }

    private async Task LoadRestaurants()
    {
        try
        {
            restaurants = await RestaurantService.GetAllRestaurantAsync(searchTerm, currentPage, PageSize);
            hasNextPage = restaurants != null && restaurants.Count == PageSize;
        }
        catch (Exception ex)
        {
            Console.WriteLine("Lỗi khi gọi API: " + ex.Message);
        }
        finally
        {
            isLoading = false;
        }
    }
    private async Task LoadRatings()
    {
        try
        {
            topMenuItems = await ReviewService.GetTopRatedMenuItemsAsync(10);
            topRatedRestaurants = await ReviewService.GetTopRatedRestaurantsAsync(5);
        }
        catch (Exception ex)
        {
            Console.WriteLine("Lỗi khi gọi API rating: " + ex.Message);
        }
    }
    private async Task Search()
    {
        currentPage = 1;
        await LoadRestaurants();
    }
    private async Task ScrollLeft(string elementId)
    {
        await JS.InvokeVoidAsync("scrollElement", elementId, -250);
    }

    private async Task ScrollRight(string elementId)
    {
        await JS.InvokeVoidAsync("scrollElement", elementId, 250);
    }

    private async Task NextPage() { currentPage++; await LoadRestaurants(); }
    private async Task PreviousPage() { if (currentPage > 1) { currentPage--; await LoadRestaurants(); } }

    private async Task SearchRestaurants()
    {
        currentPage = 1;
        isLoading = true;
        await LoadRestaurants();
    }
}

<style>
    /* Custom styles */
    .elevated-card {
        transition: all 0.25s cubic-bezier(0.175, 0.885, 0.32, 1.275);
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.08);
    }

    .elevated-card:hover {
        transform: translateY(-3px);
        box-shadow: 0 8px 24px rgba(0, 0, 0, 0.12);
    }

    .compact-card {
        border-radius: 12px !important;
        overflow: hidden;
        margin-bottom: 20px;
    }

    .restaurant-image {
        height: 160px !important;
        object-fit: cover !important;
    }

    .restaurant-title {
        font-size: 1.05rem;
        font-weight: 600;
        margin-bottom: 0.4rem;
    }

    .restaurant-description {
        font-size: 0.85rem;
        line-height: 1.4;
        display: -webkit-box;
        -webkit-line-clamp: 2;
        -webkit-box-orient: vertical;
        overflow: hidden;
    }
    .scroll-wrapper {
    position: relative;
    max-width: 100%;
    overflow: hidden;
    padding: 0 48px; /* tạo khoảng cách cho nút điều hướng */
}

.scroll-container {
    display: flex;
    gap: 1rem;
    transition: transform 0.3s ease-in-out;
    scroll-behavior: smooth;
    overflow-x: hidden; /* ẩn thanh cuộn */
    padding-bottom: 1rem;
}

.scroll-card {
    min-width: 25%;
    max-width: 25%;
    flex: 0 0 auto;
    border: 1px solid #eee;
    border-radius: 10px;
    box-shadow: 0 2px 6px rgba(0, 0, 0, 0.05);
    background-color: #fff;
    transition: transform 0.3s ease;
}

.scroll-card:hover {
    transform: translateY(-4px);
}

.scroll-btn {
    position: absolute;
    top: 45%;
    transform: translateY(-50%);
    z-index: 3;
    background-color: rgba(255, 255, 255, 0.9);
    border: none;
    font-size: 2rem;
    padding: 0 14px;
    cursor: pointer;
    border-radius: 50%;
    box-shadow: 0 2px 6px rgba(0, 0, 0, 0.2);
}

.scroll-btn.left {
    left: 0;
}

.scroll-btn.right {
    right: 0;
}


</style>
