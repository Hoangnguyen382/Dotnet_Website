@page "/home"
@using Layout_Client.Model.DTO
@using Layout_Client.Service
@inject RestaurantService RestaurantService
@inject ReviewService ReviewService

@inject NavigationManager Navigation
@inject IJSRuntime JS

<div class="w-full">
    <!-- 🌟 Hero Banner -->
    <section class="bg-gradient-to-r from-blue-500 to-blue-700 text-white text-center py-16">
        <div class="max-w-4xl mx-auto px-4">
            <h1 class="text-4xl md:text-5xl font-bold mb-4">
                Khám Phá Ẩm Thực Tại Nhà
            </h1>
            <p class="text-lg md:text-xl opacity-90">
                Đặt đồ ăn từ nhà hàng yêu thích của bạn chỉ với vài cú nhấp chuột
            </p>
        </div>
    </section>

    <!-- 🍽️ Món Ăn Được Yêu Thích -->
    <section class="bg-white py-10 border-b border-gray-200">
        <div class="max-w-6xl mx-auto px-4 relative">
            <h2 class="text-xl font-bold text-green-600 mb-6">
                🔥 Món Ăn Được Yêu Thích Nhất
            </h2>

            <!-- Scroll Buttons -->
            <button class="absolute left-0 top-1/2 -translate-y-1/2 bg-white/80 hover:bg-white shadow rounded-full text-2xl px-3 py-1"
                    @onclick='() => ScrollLeft("menuScroll")'>
                ‹
            </button>
            <button class="absolute right-0 top-1/2 -translate-y-1/2 bg-white/80 hover:bg-white shadow rounded-full text-2xl px-3 py-1"
                    @onclick='() => ScrollRight("menuScroll")'>
                ›
            </button>

            <!-- Horizontal Scroll -->
            <div id="menuScroll"
                 class="flex gap-4 overflow-hidden scroll-smooth pb-4">
                @if (topMenuItems != null)
                {
                    @foreach (var item in topMenuItems)
                    {
                        <div class="min-w-[250px] bg-white rounded-xl shadow hover:-translate-y-1 transition p-2">
                            <img src="@item.ImageUrl"
                                 class="w-full h-40 object-cover rounded-lg mb-2" />
                            <div class="px-1">
                                <h3 class="text-blue-600 font-semibold text-base mb-1 truncate">
                                    @item.MenuItemName
                                </h3>
                                <p class="text-sm text-gray-500 mb-1">
                                    ⭐ @item.AverageRating.ToString("0.0") / 5 (@item.ReviewCount đánh giá)
                                </p>
                                <p class="text-sm text-gray-600 mb-3 truncate">
                                    🏠 @item.RestaurantName
                                </p>
                                <a href="/restaurant/@item.RestaurantID"
                                   class="text-sm inline-block w-full text-center border border-blue-500 text-blue-500 rounded-lg py-1 hover:bg-blue-500 hover:text-white transition">
                                    Xem chi tiết
                                </a>
                            </div>
                        </div>
                    }
                }
                else
                {
                    <p class="text-gray-500">Không có dữ liệu món ăn nổi bật.</p>
                }
            </div>
        </div>
    </section>

    <!-- 🏆 Nhà Hàng Được Đánh Giá Cao -->
    <section class="bg-white py-10 border-b border-gray-200">
        <div class="max-w-6xl mx-auto px-4 relative">
            <h2 class="text-xl font-bold text-yellow-500 mb-6">
                🏆 Nhà Hàng Được Đánh Giá Cao
            </h2>

            <!-- Scroll Buttons -->
            <button class="absolute left-0 top-1/2 -translate-y-1/2 bg-white/80 hover:bg-white shadow rounded-full text-2xl px-3 py-1"
                    @onclick='() => ScrollLeft("restaurantScroll")'>
                ‹
            </button>
            <button class="absolute right-0 top-1/2 -translate-y-1/2 bg-white/80 hover:bg-white shadow rounded-full text-2xl px-3 py-1"
                    @onclick='() => ScrollRight("restaurantScroll")'>
                ›
            </button>

            <!-- Horizontal Scroll -->
            <div id="restaurantScroll"
                 class="flex gap-4 overflow-hidden scroll-smooth pb-4">
                @if (topRatedRestaurants != null)
                {
                    @foreach (var res in topRatedRestaurants)
                    {
                        <div class="min-w-[250px] bg-white rounded-xl shadow hover:-translate-y-1 transition p-2">
                            <img src="@res.LogoUrl"
                                 class="w-full h-40 object-cover rounded-lg mb-2" />
                            <div class="px-1">
                                <h3 class="text-blue-600 font-semibold text-base mb-1 truncate">
                                    @res.RestaurantName
                                </h3>
                                <p class="text-sm text-gray-500 mb-3">
                                    ⭐ @res.AverageRating.ToString("0.0") / 5 (@res.ReviewCount đánh giá)
                                </p>
                                <a href="/restaurant/@res.RestaurantID"
                                   class="text-sm inline-block w-full text-center border border-yellow-500 text-yellow-500 rounded-lg py-1 hover:bg-yellow-500 hover:text-white transition">
                                    Xem thực đơn
                                </a>
                            </div>
                        </div>
                    }
                }
                else
                {
                    <p class="text-gray-500">Không có dữ liệu nhà hàng nổi bật.</p>
                }
            </div>
        </div>
    </section>

    <!-- 🍴 Danh Sách Nhà Hàng -->
    <section class="py-12 bg-gray-50">
        <div class="max-w-6xl mx-auto px-4">
            <div class="flex flex-col md:flex-row justify-between items-center mb-6 gap-4">
                <h2 class="text-xl font-bold text-blue-600">
                    🍽️ Danh Sách Nhà Hàng
                </h2>

                <!-- Search Bar -->
                <div class="w-full md:w-1/2">
                    <div class="flex bg-white rounded-full shadow overflow-hidden">
                        <input type="text"
                               @bind="searchTerm"
                               placeholder="Tìm nhà hàng..."
                               class="flex-1 px-4 py-2 focus:outline-none text-sm" />
                        <button @onclick="SearchRestaurants"
                                class="px-4 text-blue-600 font-bold hover:bg-blue-50 transition">
                            <i class="fas fa-search"></i>
                        </button>
                    </div>
                </div>
            </div>

            @if (isLoading)
            {
                <div class="text-center my-12">
                    <div class="w-12 h-12 border-4 border-blue-500 border-t-transparent rounded-full animate-spin mx-auto"></div>
                    <p class="mt-4 text-gray-600">Đang tải nhà hàng...</p>
                </div>
            }
            else if (restaurants == null || restaurants.Count == 0)
            {
                <div class="bg-yellow-100 text-yellow-700 text-center py-4 rounded-lg">
                    Không tìm thấy nhà hàng nào.
                </div>
            }
            else
            {
                <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6">
                    @foreach (var restaurant in restaurants)
                    {
                        <div class="bg-white rounded-xl shadow hover:-translate-y-1 transition overflow-hidden">
                            <img src="@restaurant.LogoUrl"
                                 alt="@restaurant.Name"
                                 class="w-full h-40 object-cover" />
                            <div class="p-4 flex flex-col justify-between h-full">
                                <div>
                                    <h3 class="text-blue-600 font-semibold mb-1 truncate">
                                        @restaurant.Name
                                    </h3>
                                    <p class="text-sm text-gray-600 line-clamp-2 mb-3">
                                        @restaurant.Description
                                    </p>
                                    <div class="d-flex justify-content-between align-items-center">
                                    @if (restaurant.IsActive == true)
                                    {
                                        <span class="px-2 py-1 text-xs font-semibold text-green-700 bg-green-100 rounded-full">
                                            Đang Mở Cửa
                                        </span>
                                    }
                                    else
                                    {
                                        <span class="px-2 py-1 text-xs font-semibold text-red-700 bg-red-100 rounded-full">
                                            Đóng Cửa
                                        </span>
                                    }
                                    <a href="/restaurant/@restaurant.RestaurantID" class="btn btn-sm btn-outline-primary">Thực đơn</a>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                </div>

                <!-- Pagination -->
                <nav class="mt-8 flex justify-center space-x-2">
                    <button class="px-4 py-2 border rounded-lg disabled:opacity-50"
                            @onclick="PreviousPage"
                            disabled="@(currentPage == 1)">
                        ← Trước
                    </button>
                    <span class="px-4 py-2 bg-gray-100 rounded-lg">
                        Trang @currentPage
                    </span>
                    <button class="px-4 py-2 border rounded-lg disabled:opacity-50"
                            @onclick="NextPage"
                            disabled="@(!hasNextPage)">
                        Sau →
                    </button>
                </nav>
            }
        </div>
    </section>
</div>


@code {
    private List<RestaurantResponseDTO>? restaurants;
    private List<MenuItemRatingDTO>? topMenuItems;
    private List<RestaurantRatingDTO>? topRatedRestaurants;
    private bool isLoading = true;
    private string searchTerm = string.Empty;
    private int currentPage = 1;
    private const int PageSize = 4;
    private bool hasNextPage = false;

    protected override async Task OnInitializedAsync()
    {
        await LoadRestaurants();
        await LoadRatings();
        StateHasChanged();
    }

    private async Task LoadRestaurants()
    {
        try
        {
            restaurants = await RestaurantService.GetAllRestaurantAsync(searchTerm, currentPage, PageSize);
            hasNextPage = restaurants != null && restaurants.Count == PageSize;
        }
        catch (Exception ex)
        {
            Console.WriteLine("Lỗi khi gọi API: " + ex.Message);
        }
        finally
        {
            isLoading = false;
        }
    }
    private async Task LoadRatings()
    {
        try
        {
            topMenuItems = await ReviewService.GetTopRatedMenuItemsAsync(10);
            topRatedRestaurants = await ReviewService.GetTopRatedRestaurantsAsync(5);
        }
        catch (Exception ex)
        {
            Console.WriteLine("Lỗi khi gọi API rating: " + ex.Message);
        }
    }
    private async Task Search()
    {
        currentPage = 1;
        await LoadRestaurants();
    }
    private async Task ScrollLeft(string elementId)
    {
        await JS.InvokeVoidAsync("scrollElement", elementId, -250);
    }

    private async Task ScrollRight(string elementId)
    {
        await JS.InvokeVoidAsync("scrollElement", elementId, 250);
    }

    private async Task NextPage() { currentPage++; await LoadRestaurants(); }
    private async Task PreviousPage() { if (currentPage > 1) { currentPage--; await LoadRestaurants(); } }

    private async Task SearchRestaurants()
    {
        currentPage = 1;
        isLoading = true;
        await LoadRestaurants();
    }
}

