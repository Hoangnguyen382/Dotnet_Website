@page "/staff-management"
@attribute [Authorize]
@using Microsoft.AspNetCore.Authorization
@using Layout_Admin.Model.DTO
@using Layout_Admin.Service
@inject UserService UserService
@inject IJSRuntime JS

<div class="container py-4">

    <!-- Header -->
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h3 class="fw-bold text-primary">
            <i class="fas fa-users me-2"></i> Quản lý nhân viên
        </h3>
        <button class="btn btn-success shadow-sm" @onclick="OpenCreateModal">
            <i class="fas fa-user-plus me-2"></i> Thêm nhân viên
        </button>
    </div>

    <!-- Toast -->
    <div class="position-fixed top-0 end-0 p-3" style="z-index: 1055">
        @if (!string.IsNullOrEmpty(toastMessage))
        {
            <div class="toast show align-items-center text-white @toastClass border-0 shadow" role="alert">
                <div class="d-flex">
                    <div class="toast-body fw-bold">@toastMessage</div>
                    <button type="button" class="btn-close btn-close-white me-2 m-auto" 
                            @onclick="() => toastMessage = null"></button>
                </div>
            </div>
        }
    </div>

    <!-- Table -->
    @if (isLoading)
    {
        <div class="text-center my-5">
            <div class="spinner-border text-primary"></div>
            <p class="mt-2 text-muted">Đang tải danh sách...</p>
        </div>
    }
    else if (staffList is null || staffList.Count == 0)
    {
        <div class="alert alert-info shadow-sm">
            <i class="fas fa-info-circle me-2"></i> Chưa có nhân viên nào.
        </div>
    }
    else
    {
        <div class="card shadow-sm border-0">
            <div class="card-body p-0">
                <div class="table-responsive">
                    <table class="table table-hover align-middle mb-0">
                        <thead class="table-light">
                            <tr>
                                <th>Email</th>
                                <th>Tên</th>
                                <th>Vai trò</th>
                                <th class="text-center">Thao tác</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var staff in staffList)
                            {
                                <tr>
                                    <td>@staff.Email</td>
                                    <td>@staff.Name</td>
                                    <td>
                                        <span class="badge bg-secondary text-capitalize px-3 py-2">
                                            @staff.Role
                                        </span>
                                    </td>
                                    <td class="text-center">
                                        <button class="btn btn-sm btn-outline-primary me-1" title="Sửa" 
                                                @onclick="() => OpenEditModal(staff)">
                                            <i class="fas fa-edit"></i>
                                        </button>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    }

    <!-- Modal Thêm/Sửa Staff -->
    @if (showModal)
    {
        <div class="modal fade show d-block" style="background-color: rgba(0,0,0,0.5);">
            <div class="modal-dialog modal-dialog-centered">
                <div class="modal-content border-0 shadow-lg rounded-3">
                    <div class="modal-header bg-primary text-white">
                        <h5 class="modal-title"><i class="fas fa-user me-2"></i>@modalTitle</h5>
                        <button type="button" class="btn-close btn-close-white" @onclick="CloseModal"></button>
                    </div>
                    <div class="modal-body">
                        <EditForm Model="staffRequest" OnValidSubmit="SubmitStaff">
                            <DataAnnotationsValidator />
                            <ValidationSummary />

                            <div class="mb-3">
                                <label class="form-label fw-semibold">Tên</label>
                                <InputText class="form-control" @bind-Value="staffRequest.Name" required />
                            </div>

                            <div class="mb-3">
                                <label class="form-label fw-semibold">Email</label>
                                <InputText class="form-control" type="email" @bind-Value="staffRequest.Email" required />
                            </div>

                            @if (editingUserId == null)
                            {
                                <div class="alert alert-info py-2 small">
                                    <i class="fas fa-envelope me-1"></i> 
                                    Mật khẩu sẽ được thiết lập thông qua email. Nhân viên sẽ nhận email để đặt lại mật khẩu.
                                </div>
                            }

                            <div class="mb-3">
                                <label class="form-label fw-semibold">Vai trò</label>
                                <InputSelect class="form-select" @bind-Value="staffRequest.Role">
                                    <option value="staff">Staff</option>
                                    <option value="manager">Manager</option>
                                </InputSelect>
                            </div>

                            <div class="d-flex justify-content-end mt-3">
                                <button type="submit" class="btn btn-success me-2 px-4">
                                    <i class="fas fa-save me-1"></i> Lưu
                                </button>
                                <button type="button" class="btn btn-secondary px-4" @onclick="CloseModal">
                                    <i class="fas fa-times me-1"></i> Huỷ
                                </button>
                            </div>
                        </EditForm>
                    </div>
                </div>
            </div>
        </div>
    }
</div>

@code {
    private int restaurantId;
    private List<UserResponseDTO> staffList = new();
    private UserDTO staffRequest = new();
    private bool isLoading = true;
    private bool showModal = false;
    private string modalTitle = "";
    private int? editingUserId = null;
    private string toastMessage;
    private string toastClass;

    protected override async Task OnInitializedAsync()
    {
        var user = await UserService.GetCurrentUserAsync();
        if (user == null || user.RestaurantID == null) return;

        restaurantId = user.RestaurantID;
        await LoadStaff();
    }

    private async Task LoadStaff()
    {
        isLoading = true;
        staffList = await UserService.GetAllUsersAsync(restaurantId);
        isLoading = false;
    }

    private void OpenCreateModal()
    {
        staffRequest = new UserDTO { Role = "staff" };
        editingUserId = null;
        modalTitle = "Thêm nhân viên";
        showModal = true;
    }

    private void OpenEditModal(UserResponseDTO staff)
    {
        editingUserId = staff.UserID;
        staffRequest = new UserDTO
        {
            Name = staff.Name,
            Email = staff.Email,
            Role = staff.Role
        };
        modalTitle = "Chỉnh sửa nhân viên";
        showModal = true;
    }

    private void CloseModal() => showModal = false;

    private async Task SubmitStaff()
    {
        bool result;

        if (editingUserId == null)
        {
            // Tạo tài khoản không cần password — server sẽ xử lý gửi email reset
            result = await UserService.CreateStaffAsync(staffRequest) != null;
        }
        else
        {
            result = await UserService.UpdateRoleUserAsync(editingUserId.Value, staffRequest.Role, staffRequest);
        }

        toastMessage = result ? "Lưu thành công!" : "Thao tác thất bại!";
        toastClass = result ? "bg-success" : "bg-danger";
        showModal = false;
        await LoadStaff();
    }
}
