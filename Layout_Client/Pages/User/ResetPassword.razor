@page "/reset_password"
@layout Layout_Client.Shared.LoginLayout
@using Layout_Client.Model.DTO
@using Layout_Client.Service
@using Microsoft.AspNetCore.WebUtilities
<link rel="stylesheet" href="css/login.css" />
@inject NavigationManager NavManager
@inject UserService UserService

<div class="login-container">
    <!-- Image side -->
    <div class="image-side">
        <img src="https://placehold.co/800x550?text=Restaurant+Management&font=roboto" alt="Ảnh nền nhà hàng">
        <div class="image-overlay">
            <div class="logo"><i class="fas fa-utensils"></i></div>
            <h2>Hệ thống quản lý nhà hàng</h2>
        </div>
    </div>

    <!-- Form side -->
    <div class="form-side">
        <div class="header">
            <h1>Đặt lại mật khẩu</h1>
            <p>Nhập mật khẩu mới của bạn để hoàn tất</p>
        </div>

        <EditForm Model="resetModel" OnValidSubmit="HandleResetPassword">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <div class="form-group">
                <label for="newPass">Mật khẩu mới</label>
                <div class="input-wrapper">
                    <i class="fas fa-lock input-icon"></i>
                    <InputText id="newPass" type="password" 
                               @bind-Value="resetModel.NewPassword" 
                               class="form-control" 
                               placeholder="Nhập mật khẩu mới" />
                </div>
            </div>

            <div class="form-group">
                <label for="confirmPass">Nhập lại mật khẩu</label>
                <div class="input-wrapper">
                    <i class="fas fa-lock input-icon"></i>
                    <InputText id="confirmPass" type="password" 
                               @bind-Value="confirmPassword" 
                               class="form-control" 
                               placeholder="Nhập lại mật khẩu" />
                </div>
                @if (!string.IsNullOrEmpty(passwordMismatchError))
                {
                    <div class="text-danger mt-1">@passwordMismatchError</div>
                }
            </div>

            @if (!string.IsNullOrEmpty(errorMessage))
            {
                <div class="alert alert-danger text-center">@errorMessage</div>
            }
            @if (!string.IsNullOrEmpty(successMessage))
            {
                <div class="alert alert-success text-center">@successMessage</div>
            }

            <button type="submit" class="btn btn-warning">Xác nhận</button>
        </EditForm>

        <div class="footer">
            <p>Nhớ mật khẩu rồi? <a href="/login">Đăng nhập</a></p>
        </div>
    </div>
</div>

@code {
    private ResetPassDTO resetModel = new();
    private string confirmPassword = string.Empty;
    private string? successMessage;
    private string? errorMessage;
    private string? passwordMismatchError;

    protected override void OnInitialized()
    {
        var uri = NavManager.ToAbsoluteUri(NavManager.Uri);
        if (QueryHelpers.ParseQuery(uri.Query).TryGetValue("token", out var token))
        {
            resetModel.ResetToken = token!;
        }
        else
        {
            errorMessage = "❌ Token không hợp lệ.";
        }
    }

    private async Task HandleResetPassword()
    {
        passwordMismatchError = null;
        errorMessage = null;
        successMessage = null;

        if (resetModel.NewPassword != confirmPassword)
        {
            passwordMismatchError = "❌ Mật khẩu nhập lại không khớp.";
            return;
        }

        var result = await UserService.ResetPasswordAsync(resetModel);
        if (result)
        {
            successMessage = "✅ Mật khẩu đã được đặt lại thành công.";
        }
        else
        {
            errorMessage = "❌ Token hết hạn hoặc mật khẩu không hợp lệ.";
        }
    }
}
